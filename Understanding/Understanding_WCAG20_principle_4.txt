
------------------------------------------------------------------------


    *Compatible*:
    Understanding Guideline 4.1

    *Guideline 4.1: *Maximize compatibility with current and future user
    agents, including assistive technologies.


      Intent of Guideline 4.1

The purpose of this guideline is to support compatibility with current
and future user agents, /especially/ assistive technologies (AT). This
is done both by 1) ensuring that authors do not do things that would
break AT (e.g., poorly formed markup) or circumvent AT (e.g., by using
unconventional markup or code) and 2) exposing information in the
content in standard ways that assistive technologies can recognize and
interact with. Since technologies change quickly, and AT developers have
much trouble keeping up with rapidly changing technologies, it is
important that content follow conventions and be compatible with APIs so
that AT can more easily work with new technologies as they evolve.


      Advisory Techniques for Guideline 4.1 (not success criteria specific)

Specific techniques for meeting each Success Criterion for this
guideline are listed in the understanding sections for each Success
Criterion (listed below). If there are techniques, however, for
addressing this guideline that do not fall under any of the success
criteria, they are listed here. These techniques are not required or
sufficient for meeting any success criteria, but can make certain types
of Web content more accessible to more people.

  *

    Avoiding deprecated features of W3C technologies (future link)

  *

    Not displaying content that relies on technologies that are not
    accessibility-supported when the technology is turned off or not
    supported.


    *Parsing*:
    Understanding SC 4.1.1

    *4.1.1
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#ensure-compat-parses> Parsing:*
    In content implemented using markup languages, elements have
    complete start and end tags, elements are nested according to their
    specifications, elements do not contain duplicate attributes, and
    any IDs are unique, except where the specifications allow these
    features. (Level A)

    /Note: /Start and end tags that are missing a critical character in
    their formation, such as a closing angle bracket or a mismatched
    attribute value quotation mark are not complete.


      Intent of this Success Criterion

The intent of this Success Criterion is to ensure that user agents,
including assistive technologies, can accurately interpret and parse
content. If the content cannot be parsed into a data structure, then
different user agents may present it differently or be completely unable
to parse it. Some user agents use "repair techniques" to render poorly
coded content.

Since repair techniques vary among user agents, authors cannot assume
that content will be accurately parsed into a data structure or that it
will be rendered correctly by specialized user agents, including
assistive technologies, unless the content is created according to the
rules defined in the formal grammar for that technology. In markup
languages, errors in element and attribute syntax and failure to provide
properly nested start/end tags lead to errors that prevent user agents
from parsing the content reliably. Therefore, the Success Criterion
requires that the content can be parsed using only the rules of the
formal grammar

/Note: /The concept of "well formed" is close to what is required here.
However, exact parsing requirements vary amongst markup languages, and
most non XML-based languages do not explicitly define requirements for
well formedness. Therefore, it was necessary to be more explicit in the
success criterion in order to be generally applicable to markup
languages. Because the term "well formed" is only defined in XML, and
(because end tags are sometimes optional) valid HTML does not require
well formed code, the term is not used in this success criterion.


        Specific Benefits of Success Criterion 4.1.1

  *

    Ensuring that Web pages have complete start and end tags and are
    nested according to specification helps ensure that assistive
    technologies can parse the content accurately and without crashing.


      Examples of Success Criterion 4.1.1

(none currently documented)


      Related Resources

Resources are for information purposes only, no endorsement implied.

(none currently documented)


      Techniques and Failures for Success Criterion 4.1.1 - Parsing

Each numbered item in this section represents a technique or combination
of techniques that the WCAG Working Group deems sufficient for meeting
this Success Criterion. The techniques listed only satisfy the Success
Criterion if all of the WCAG 2.0 conformance requirements
<http://www.w3.org/TR/2008/REC-WCAG20-20081211/#conformance-reqs> have
been met.


        Sufficient Techniques

 1.

    G134: Validating Web pages
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G134>

 2.

    G192: Fully conforming to specifications
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G192>

 3.

    H88: Using HTML according to spec
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H88> (HTML)

 4.

    Ensuring that Web pages can be parsed by using one of the following
    techniques:

      *

        H74: Ensuring that opening and closing tags are used according
        to specification
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H74>
        (HTML) *AND* H93: Ensuring that id attributes are unique on a
        Web page
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H93>
        (HTML) *AND* H94: Ensuring that elements do not contain
        duplicate attributes
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H94> (HTML)

      *

        H75: Ensuring that Web pages are well-formed
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H75> (HTML)

 5.

    SL33: Using Well-Formed XAML to Define a Silverlight User Interface
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/SL33>
    (Silverlight)


        Additional Techniques (Advisory) for 4.1.1

Although not required for conformance, the following additional
techniques should be considered in order to make content more
accessible. Not all techniques can be used or would be effective in all
situations.

(none currently documented)


        Common Failures for SC 4.1.1

The following are common mistakes that are considered failures of
Success Criterion 4.1.1 by the WCAG Working Group.

  *

    F70: Failure of Success Criterion 4.1.1 due to incorrect use of
    start and end tags or attribute markup
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F70>

  *

    F77: Failure of Success Criterion 4.1.1 due to duplicate values of
    type ID <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F77>

  *

    F17: Failure of Success Criterion 1.3.1 and 4.1.1 due to
    insufficient information in DOM to determine one-to-one
    relationships (e.g., between labels with same id) in HTML
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F17>

  *

    F62: Failure of Success Criterion 1.3.1 and 4.1.1 due to
    insufficient information in DOM to determine specific relationships
    in XML <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F62>

------------------------------------------------------------------------


    *Name, Role, Value*:
    Understanding SC 4.1.2

    *4.1.2
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#ensure-compat-rsv>
    Name, Role, Value:* For all user interface components
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#user-interface-componentdef>
    (including but not limited to: form elements, links and components
    generated by scripts), the name
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#namedef> and role
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#roledef> can be
    programmatically determined
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#programmaticallydetermineddef>;
    states, properties, and values that can be set by the user can be
    programmatically set
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#programmaticallysetdef>;
    and notification of changes to these items is available to user
    agents
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#useragentdef>,
    including assistive technologies
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#atdef>. (Level A)

    /Note: /This success criterion is primarily for Web authors who
    develop or script their own user interface components. For example,
    standard HTML controls already meet this success criterion when used
    according to specification.


      Intent of this Success Criterion

The intent of this Success Criterion is to ensure that Assistive
Technologies (AT) can gather information about, activate(or set) and
keep up to date on the status of user interface controls in the content.

When standard controls from accessible technologies are used, this
process is straightforward. If the user interface elements are used
according to specification the conditions of this provision will be met.
(See examples of Success Criterion 4.1.2 below)

If custom controls are created, however, or interface elements are
programmed (in code or script) to have a different role and/or function
than usual, then additional measures need to be taken to ensure that the
controls provide important information to assistive technologies and
allow themselves to be controlled by assistive technologies.

A particularly important state of a user interface control is whether or
not it has focus. The focus state of a control can be programmatically
determined, and notifications about change of focus are sent to user
agents and assistive technology. Other examples of user interface
control state are whether or not a checkbox or radio button has been
selected, or whether or not a collapsible tree or list node is expanded
or collapsed.

/Note: /Success Criterion 4.1.2 requires a programmatically determinable
name for all user interface components. Names may be visible or
invisible. Occasionally, the name must be visible, in which case it is
identified as a label. Refer to the definition of name and label in the
glossary for more information.


        Specific Benefits of Success Criterion 4.1.2

  *

    Providing role, state, and value information on all user interface
    components enables compatibility with assistive technology, such as
    screen readers, screen magnifiers, and speech recognition software,
    used by people with disabilities.


      Examples of Success Criterion 4.1.2

  *

    *Accessible APIs *

    A Java applet uses the accessibility API defined by the language.
    Refer to the IBM Guidelines for Writing Accessible Applications
    Using 100% Pure Java
    <http://www-03.ibm.com/able/guidelines/java/snsjavag.html>.


      Related Resources

Resources are for information purposes only, no endorsement implied.

  *

    CodeTalks: Accessible DHTML
    <http://wiki.codetalks.org/wiki/index.php/Main_Page>

  *

    Dynamic Accessible Web Content Roadmap
    <http://www.w3.org/WAI/PF/roadmap/>

  *

    Role Taxonomy for Accessible Adaptable Applications
    <http://www.w3.org/WAI/PF/GUI/>

  *

    States and Adaptable Properties Module
    <http://www.w3.org/WAI/PF/adaptable/>

  *

    Microsoft Active Accessibility, Version 2.0
    <http://msdn.microsoft.com/en-us/library/ms697707.aspx>

  *

    IBM Guidelines for Writing Accessible Applications using 100% Pure
    Java <http://www-03.ibm.com/able/guidelines/java/snsjavag.html>

  *

    Adobe Flash accessibility design guidelines
    <http://www.adobe.com/accessibility/products/flash/best_practices.html>


      Techniques and Failures for Success Criterion 4.1.2 - Name, Role,
      Value

Each numbered item in this section represents a technique or combination
of techniques that the WCAG Working Group deems sufficient for meeting
this Success Criterion. The techniques listed only satisfy the Success
Criterion if all of the WCAG 2.0 conformance requirements
<http://www.w3.org/TR/2008/REC-WCAG20-20081211/#conformance-reqs> have
been met.


        Sufficient Techniques

*Instructions:* Select the situation below that matches your content.
Each situation includes numbered techniques (or combinations of
techniques) that the Working Group deems to be sufficient for that
situation.


          Situation A: If using a standard user interface component in a
          markup language (e.g., HTML):

 1.

    G108: Using markup features to expose the name and role, allow
    user-settable properties to be directly set, and provide
    notification of changes
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108> using
    technology-specific techniques below:

      *

        H91: Using HTML form controls and links
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H91> (HTML)

      *

        H44: Using label elements to associate text labels with form
        controls
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H44> (HTML)

      *

        H64: Using the title attribute of the frame and iframe elements
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H64> (HTML)

      *

        H65: Using the title attribute to identify form controls when
        the label element cannot be used
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H65> (HTML)

      *

        H88: Using HTML according to spec
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H88> (HTML)


          Situation B: If using script or code to re-purpose a standard
          user interface component in a markup language:

 1.

    Exposing the names and roles, allowing user-settable properties to
    be directly set, and providing notification of changes using one of
    the following techniques:

*


          Situation C: If using a standard user interface component in a
          programming technology:

 1.

    G135: Using the accessibility API features of a technology to expose
    names and roles, to allow user-settable properties to be directly
    set, and to provide notification of changes
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G135> using
    technology-specific techniques below:

      *

        FLASH32: Using auto labeling to associate text labels with form
        controls
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/FLASH32>
        (Flash)

      *

        FLASH29: Setting the label property for form components
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/FLASH29>
        (Flash)

      *

        FLASH30: Specifying accessible names for image buttons
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/FLASH30>
        (Flash)

      *

        PDF10: Providing labels for interactive form controls in PDF
        documents
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/PDF10> (PDF)

      *

        PDF12: Providing name, role, value information for form fields
        in PDF documents
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/PDF12> (PDF)

      *

        SL26: Using LabeledBy to Associate Labels and Targets in
        Silverlight
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/SL26>
        (Silverlight)

      *

        SL32: Using Silverlight Text Elements for Appropriate
        Accessibility Role
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/SL32>
        (Silverlight)


          Situation D: If creating your own user interface component in
          a programming language:

 1.

    G10: Creating components using a technology that supports the
    accessibility API features of the platforms on which the user agents
    will be run to expose the names and roles, allow user-settable
    properties to be directly set, and provide notification of changes
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G10> using
    technology-specific techniques below:

      *

        SL6: Defining a UI Automation Peer for a Custom Silverlight
        Control
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/SL6>
        (Silverlight)

      *

        SL18: Providing Text Equivalent for Nontext Silverlight Controls
        With AutomationProperties.Name
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/SL18>
        (Silverlight)

      *

        SL20: Relying on Silverlight AutomationPeer Behavior to Set
        AutomationProperties.Name
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/SL20>
        (Silverlight)

      *

        SL30: Using Silverlight Control Compositing and
        AutomationProperties.Name
        <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/SL30>
        (Silverlight)


        Additional Techniques (Advisory) for 4.1.2

Although not required for conformance, the following additional
techniques should be considered in order to make content more
accessible. Not all techniques can be used or would be effective in all
situations.

  *

    Providing labels for all form controls that do not have implicit
    labels (future link)


        Common Failures for SC 4.1.2

The following are common mistakes that are considered failures of
Success Criterion 4.1.2 by the WCAG Working Group.

  *

    F59: Failure of Success Criterion 4.1.2 due to using script to make
    div or span a user interface control in HTML
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F59>

    /Note: /This failure may be solved in the future using DHTML roadmap
    techniques.

  *

    F15: Failure of Success Criterion 4.1.2 due to implementing custom
    controls that do not use an accessibility API for the technology, or
    do so incompletely
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F15>

  *

    F20: Failure of Success Criterion 1.1.1 and 4.1.2 due to not
    updating text alternatives when changes to non-text content occur
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F20>

  *

    F68: Failure of Success Criterion 1.3.1 and 4.1.2 due to the
    association of label and user interface controls not being
    programmatically determinable
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F68>

  *

    F79: Failure of Success Criterion 4.1.2 due to the focus state of a
    user interface component not being programmatically determinable or
    no notification of change of focus state available
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F79>

  *

    F86: Failure of Success Criterion 4.1.2 due to not providing names
    for each part of a multi-part form field, such as a US telephone
    number <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F86>

  *

    F89: Failure of Success Criteria 2.4.4, 2.4.9 and 4.1.2 due to using
    null alt on an image where the image is the only content in a link
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F89>


      Key Terms

assistive technology (as used in this document)

    hardware and/or software that acts as a user agent
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#useragentdef>, or
    along with a mainstream user agent, to provide functionality to meet
    the requirements of users with disabilities that go beyond those
    offered by mainstream user agents

    /Note 1: / functionality provided by assistive technology includes
    alternative presentations (e.g., as synthesized speech or magnified
    content), alternative input methods (e.g., voice), additional
    navigation or orientation mechanisms, and content transformations
    (e.g., to make tables more accessible).

    /Note 2: /Assistive technologies often communicate data and messages
    with mainstream user agents by using and monitoring APIs.

    /Note 3: /The distinction between mainstream user agents and
    assistive technologies is not absolute. Many mainstream user agents
    provide some features to assist individuals with disabilities. The
    basic difference is that mainstream user agents target broad and
    diverse audiences that usually include people with and without
    disabilities. Assistive technologies target narrowly defined
    populations of users with specific disabilities. The assistance
    provided by an assistive technology is more specific and appropriate
    to the needs of its target users. The mainstream user agent may
    provide important functionality to assistive technologies like
    retrieving Web content from program objects or parsing markup into
    identifiable bundles.

    /Example: /Assistive technologies that are important in the context
    of this document include the following:

      *

        screen magnifiers, and other visual reading assistants, which
        are used by people with visual, perceptual and physical print
        disabilities to change text font, size, spacing, color,
        synchronization with speech, etc. in order to improve the visual
        readability of rendered text and images;

      *

        screen readers, which are used by people who are blind to read
        textual information through synthesized speech or braille;

      *

        text-to-speech software, which is used by some people with
        cognitive, language, and learning disabilities to convert text
        into synthetic speech;

      *

        speech recognition software, which may be used by people who
        have some physical disabilities;

      *

        alternative keyboards, which are used by people with certain
        physical disabilities to simulate the keyboard (including
        alternate keyboards that use head pointers, single switches,
        sip/puff and other special input devices.);

      *

        alternative pointing devices, which are used by people with
        certain physical disabilities to simulate mouse pointing and
        button activations.

name

    text by which software can identify a component within Web content
    to the user

    /Note 1: /The name may be hidden and only exposed by assistive
    technology, whereas a label
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#labeldef> is
    presented to all users. In many (but not all) cases, the label and
    the name are the same.

    /Note 2: /This is unrelated to the name attribute in HTML.

programmatically determined (programmatically determinable)

    determined by software from author-supplied data provided in a way
    that different user agents
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#useragentdef>,
    including assistive technologies
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#atdef>, can extract
    and present this information to users in different modalities

    /Example 1: /Determined in a markup language from elements and
    attributes that are accessed directly by commonly available
    assistive technology.

    /Example 2: /Determined from technology-specific data structures in
    a non-markup language and exposed to assistive technology via an
    accessibility API that is supported by commonly available assistive
    technology.

programmatically set

    set by software using methods that are supported by user agents,
    including assistive technologies

role

    text or number by which software can identify the function of a
    component within Web content

    /Example: /A number that indicates whether an image functions as a
    hyperlink, command button, or check box.

user agent

    any software that retrieves and presents Web content for users

    /Example: /Web browsers, media players, plug-ins, and other programs
    — including assistive technologies
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#atdef> — that help
    in retrieving, rendering, and interacting with Web content.

user interface component

    a part of the content that is perceived by users as a single control
    for a distinct function

    /Note 1: /Multiple user interface components may be implemented as a
    single programmatic element. Components here is not tied to
    programming techniques, but rather to what the user perceives as
    separate controls.

    /Note 2: /User interface components include form elements and links
    as well as components generated by scripts.

    /Example: /An applet has a "control" that can be used to move
    through content by line or page or random access. Since each of
    these would need to have a name and be settable independently, they
    would each be a "user interface component."

------------------------------------------------------------------------


    Understanding Conformance

All WCAG 2.0 Success Criteria are written as testable criteria for
objectively determining if content satisfies them. Testing the Success
Criteria would involve a combination of automated testing and human
evaluation. The content should be tested by those who understand how
people with different types of disabilities use the Web.

Testing and testable in the context refer to functional testing, that is
verifying that the content functions as expected, or in this case, that
it satisfies the Success Criteria. Although content may satisfy all
Success Criteria, the content may not always be usable by people with a
wide variety of disabilities. Therefore, usability testing is
recommended, in addition to the required functional testing. Usability
testing aims to determine how well people can use the content for its
intended purpose. It is recommended that users with disabilities be
included in test groups when performing usability testing.


      What does conformance mean?

Conformance to a standard means that you meet or satisfy the
'requirements' of the standard. In WCAG 2.0 the 'requirements' are the
Success Criteria. To conform to WCAG 2.0, you need to satisfy the
Success Criteria, that is, there is no content which violates the
Success Criteria.

/Note: /This means that if there is no content to which a success
criterion applies, the success criterion is satisfied.

Most standards only have one level of conformance. In order to
accommodate different situations that may require or allow greater
levels of accessibility than others, WCAG 2.0 has three levels of
conformance, and therefore, three levels of Success Criteria.


      Understanding Conformance Requirements

There are five requirements that must be met in order for content to be
classified as 'conforming' to WCAG 2.0. This section provides brief
notes on those requirements. This section will be expanded over time to
address questions that may arise or to provide new examples of ways to
meet the different conformance requirements.


        Understanding Requirement 1

    *1. Conformance Level:* One of the following levels of conformance
    is met in full.

      *

        *Level A: *For Level A conformance (the minimum level of
        conformance), the Web page
        <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#webpagedef>
        satisfies
        <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#satisfiesdef>
        all the Level A Success Criteria, or a conforming alternate
        version
        <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#conforming-alternate-versiondef>
        is provided.

      *

        *Level AA: *For Level AA conformance, the Web page satisfies all
        the Level A and Level AA Success Criteria, or a Level AA
        conforming alternate version is provided.

      *

        *Level AAA: *For Level AAA conformance, the Web page satisfies
        all the Level A, Level AA and Level AAA Success Criteria, or a
        Level AAA conforming alternate version is provided.

    /Note 1: /Although conformance can only be achieved at the stated
    levels, authors are encouraged to report (in their claim) any
    progress toward meeting success criteria from all levels beyond the
    achieved level of conformance.

    /Note 2: /It is not recommended that Level AAA conformance be
    required as a general policy for entire sites because it is not
    possible to satisfy all Level AAA Success Criteria for some content.

The first requirement deals with the levels of conformance. It basically
says that all information on a page conforms or has a conforming
alternate version
<http://www.w3.org/TR/2008/REC-WCAG20-20081211/#conforming-alternate-versiondef>
that is available from the page. The requirement also explains that no
conformance is possible without at least satisfying all of the Level A
Success Criteria.

The note points out that authors are encouraged to go beyond conformance
to a particular level and to complete, and report if they desire, any
progress toward higher levels of conformance.

See also Understanding Conforming Alternate Versions
<#uc-conforming-alt-versions-head> which includes techniques for
providing Conforming Alternate Versions.


        Understanding Requirement 2

    *2. Full pages:* Conformance
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#conformancedef> (and
    conformance level) is for full Web page(s)
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#webpagedef> only,
    and cannot be achieved if part of a Web page is excluded.

    /Note 1: /For the purpose of determining conformance, alternatives
    to part of a page's content are considered part of the page when the
    alternatives can be obtained directly from the page, e.g., a long
    description or an alternative presentation of a video.

    /Note 2: /Authors of Web pages that cannot conform due to content
    outside of the author's control may consider a Statement of Partial
    Conformance
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#conformance-partial>.

This provision simply requires that the whole page conform. Statements
about "part of a page conforming" cannot be made.

Sometimes, supplemental information may be available from another page
for information on a page. The |longdesc| attribute in HTML is an
example. With |longdesc|, a long description of a graphic might be on a
separate page that the user can jump to from the page with the graphic.
This makes it clear that such content is considered part of the Web
page, so that requirement #2 is satisfied for the combined set of Web
pages considered as a single Web page. Alternatives can also be provided
on the same page. For example creating an equivalent to a user interface
control.

/Note 1: /Because of conformance requirement 5, a whole page may conform
even if parts of the page use non accessibility-supported content
technologies as long as they do not interfere with the rest of the page
and all information and function is available elsewhere on or from the page.

/Note 2: /It is possible to include non-conforming content. See
Understanding Conformance Requirement 5
<https://www.w3.org/TR/2012/NOTE-UNDERSTANDING-WCAG20-20120103/conformance.html#uc-conf-req5-head>.


        Understanding Requirement 3

    *3. Complete processes:* When a Web page
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#webpagedef> is one
    of a series of Web pages presenting a process
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#processdef> (i.e., a
    sequence of steps that need to be completed in order to accomplish
    an activity), all Web pages in the process conform at the specified
    level or better. (Conformance is not possible at a particular level
    if any page in the process does not conform at that level or better.)

    /Example: /An online store has a series of pages that are used to
    select and purchase products. All pages in the series from start to
    finish (checkout) conform in order for any page that is part of the
    process to conform.

This provision prevents a Web page that is part of a larger process from
being considered conforming if the process overall is not. This would
prevent a shopping site from being classified as conforming if the
checkout or other features of the site that are part of the shopping and
buying process do not conform.


        Understanding Requirement 4

    *4. Only Accessibility-Supported Ways of Using Technologies:* Only
    accessibility-supported
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#accessibility-supporteddef>
    ways of using technologies
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#technologydef> are
    relied upon
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#reliedupondef> to
    satisfy the success criteria. Any information or functionality that
    is provided in a way that is not accessibility supported is also
    available in a way that is accessibility supported. (See
    Understanding accessibility support
    <https://www.w3.org/TR/2012/NOTE-UNDERSTANDING-WCAG20-20120103/conformance.html#uc-accessibility-support-head>.)


This conformance requirement is explained below under Understanding
Accessibility Support
<https://www.w3.org/TR/2012/NOTE-UNDERSTANDING-WCAG20-20120103/conformance.html#uc-accessibility-support-head>.


        Understanding Requirement 5

    *5. Non-Interference:* If technologies
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#technologydef> are
    used in a way that is not accessibility supported
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#accessibility-supporteddef>,
    or if they are used in a non-conforming way, then they do not block
    the ability of users to access the rest of the page. In addition,
    the Web page
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#webpagedef> as a
    whole continues to meet the conformance requirements under each of
    the following conditions:

     1.

        when any technology that is not relied upon
        <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#reliedupondef>
        is turned on in a user agent,

     2.

        when any technology that is not relied upon is turned off in a
        user agent, and

     3.

        when any technology that is not relied upon is not supported by
        a user agent

    In addition, the following success criteria apply to all content on
    the page, including content that is not otherwise relied upon to
    meet conformance, because failure to meet them could interfere with
    any use of the page:

      *

        *1.4.2 - Audio Control*,

      *

        *2.1.2 - No Keyboard Trap*,

      *

        *2.3.1 - Three Flashes or Below Threshold*, and

      *

        *2.2.2 - Pause, Stop, Hide*.

This basically says that technologies that are *not accessibility
supported* can be used, as long as all the information is also available
using technologies that *are accessibility supported* and as long as the
*non-accessibility-supported* material does not interfere.

Technologies that are not accessibility supported can be used, or
technologies that are accessibility supported can be used in a non
conforming manner, as long as all the information is also available
using technologies that are accessibility supported, in a manner that
does conform, and as long as the non-accessibility-supported material
does not interfere.

There are four provisions that particularly deal with issues of
interference with use of the page. These four are included in a note
here. A note on each of the provisions indicates that these Success
Criteria need to be met for all content including content created using
technologies that are not accessibility supported.

/Example: /A Web page incorporates a new interactive graphic technology
called "ZAP". Although ZAP is accessibility-supported, the information
that is presented in ZAP is also presented on the page in HTML, so ZAP
is not relied upon. So, this page would pass conformance requirement #1.
However, if the user tries to tab through the ZAP content, the focus
drops into the ZAP object and gets stuck there. Once inside, there is
nothing the user can do to get the focus back out. So keyboard users
cannot use the bottom half of the page. The ZAP content also is
continually flashing brightly at different rates and doesn't stop. So,
people with attention deficit are distracted and those with
photosensitive seizure disorders may have seizures. Conformance
requirement #5 prevents situations like these from being possible on a
conforming page.


      Understanding Conformance Claims

It is not required to make any conformance claim in order to conform. If
one does make a claim, however, the rules must be followed.

Sometimes, one may want to make a claim for just the content that was
added after a certain date. Or, one may want to claim WCAG 1.0
conformance for content up to a date and WCAG 2.0 for content that was
created or modified after that date. There are no prohibitions in WCAG
2.0 to any of these practices as long as it is clear which pages are
claiming conformance to which version of WCAG.

/Note 1: /When talking about technologies that are "relied upon," we're
talking about Web content technologies (HTML, CSS, JavaScript, etc.),
not user agents (browsers, assistive technologies, etc.).

/Note 2: /Conformance claims are not usually located on each Web page
within the scope of conformance.


        Information about any additional steps taken that go beyond the
        Success Criteria

One of the optional components of a conformance claim is "Information
about any additional steps taken that go beyond the Success Criteria to
enhance accessibility." This can include additional Success Criteria
that have been met, advisory techniques that were implemented,
information about any additional protocols used to aid access for people
with particular disabilities or needs, etc. Any information that would
be useful to people in understanding the accessibility of the pages may
be included.


        Use of metadata to report conformance claims

The most useful way of attaching conformance claims to content would be
to do so in standard machine readable form. When this practice is
widespread, search tools or special user agents will be able to make use
of this information to find and provide content that is more accessible
or so the user agents can adjust to the content. There are a number of
metadata based options under development for making claims, and authors
and tool developers are encouraged to support them.

In addition, metadata can be used to report conformance to individual
Success Criteria once Level A conformance has been achieved.

There are also programmatic reporting formats such as Evaluation and
Report Language (EARL) <http://www.w3.org/WAI/intro/earl.php> that are
being developed that could provide machine readable formats for detailed
conformance information. As the reporting formats are formalized and
support for them develops, they will be documented here.


        Examples of Conformance Claims


          Examples of Required Components of Conformance Claims

/Example 1: /On 20 September 2009, all Web pages at
http://www.example.com conform to Web Content Accessibility Guidelines
2.0 at http://www.w3.org/TR/2008/REC-WCAG20-20081211/. Level A conformance.

  *

    The documented set of accessibility-supported content technologies
    *relied upon* for this claim is a subset of ISA- AsCTset#1-2008 at
    http://ISA.example.gov/AsCTsets/AS2-2008.

/Example 2: /(using a regular expression) On 12 August 2009, pages
matching the pattern http://www.example.com/(marketing|sales|contact)/.*
conform to Web Content Accessibility Guidelines 2.0 at
http://www.w3.org/TR/2008/REC-WCAG20-20081211/. Level AA conformance.

  *

    The technologies that this content "*relies upon*" is: XHTML 1.0
    Transitional, CSS 2.0 and JavaScript 1.2.

/Example 3: /(using boolean logic) On 6 January 2009,
http://example.com/ AND NOT (http://example.com/archive/ OR
http://example.com/publications/archive/) conforms to Web Content
Accessibility Guidelines 2.0 at
http://www.w3.org/TR/2008/REC-WCAG20-20081211/. Level AA conformance.

  *

    The documented set of accessibility-supported content technologies
    *relied upon* for this claim includes XHTML 1.0 and SMIL from ISA-
    AsCTset#1-2008 at http://ISA.example.gov/AsCTsets/AS2-2008.


          Examples of Conformance Claims including optional components

/Example 1: /On 5 May 2009, the page "G7: An Introduction"
http://telcor.example.com/nav/G7/intro.html conforms to Web Content
Accessibility Guidelines 2.0 at
http://www.w3.org/TR/2008/REC-WCAG20-20081211/. Level AA conformance.

  *

    The following additional Success Criteria have also been met: 1.1.2,
    1.2.5, and 1.4.3.

  *

    The documented set of accessibility-supported content technologies
    used for this claim is AsCTset#1-2006 at
    http://UDLabs.org/AsCTset#1-2006.html.

  *

    The technologies that this content "*relies upon*" is: XHTML 1.0
    (Strict), and Real Video.

  *

    The technologies that this content "*uses but does not rely upon*"
    are: JavaScript 1.2, CSS2.

/Example 2: /On 21 June 2009, all content beginning with the URI
http://example.com/nav and http://example.com/docs conform to Web
Content Accessibility Guidelines 2.0 at
http://www.w3.org/TR/2008/REC-WCAG20-20081211/. Level AAA conformance.

  *

    The documented set of accessibility-supported content technologies
    used for this claim is SMITH- AsCTset#2-2008 at
    http://smithreports.example.com/AsCTsets/AS2-2008.

  *

    The technologies that this content "*relies upon*" are: XHTML 1.0
    (Strict), CSS2, JavaScript 1.2, JPEG, PNG.

  *

    The user agents, including assistive technologies, that this content
    has been tested with can be found at
    http://example.com/docs/WCAG20/test/technologies.html.

/Example 3: /On 23 March 2009, all content available on the server at
http://www.wondercall.example.com conforms to Web Content Accessibility
Guidelines 2.0 at http://www.w3.org/TR/2008/REC-WCAG20-20081211/.
Single-A conformance.

  *

    The technology that this content "*relies upon*" is: HTML 4.01.

  *

    The technologies that this content "*uses but does not rely upon*"
    are: CSS2, and gif.

  *

    This content was tested using the following user agents and
    assistive technologies: Firefox 1.5 on Windows Vista with
    Screenreader X 4.0, Firefox 1.5 on Windows XP SP 2 with Screenreader
    X 3.5, IE 6.0 on Windows 2000 SP4 with Screenreader Y 5.0, IE 6.0 on
    Windows 2000 SP4 with Screenreader Z 2.0, and Firefox 1.5 on Windows
    XP SP2 with Screenreader X 4.0, Safari 2.0 with OS X 10.4.


        Techniques for Conformance Claims


          Advisory Techniques

  *

    Expressing a conformance claim to WCAG 2.0 in Dublin Core elements
    (future link)


      Understanding Levels of Conformance

First, there are a number of conditions that must be met for a Success
Criterion to be included at all. These include:

 1.

    All Success Criteria must be *important access issues for people
    with disabilities* that address problems beyond the usability
    problems that might be faced by all users. In other words, the
    access issue must cause a proportionately greater problem for people
    with disabilities than it causes people without disabilities in
    order to be considered an accessibility issue (and covered under
    these accessibility guidelines).

 2.

    All Success Criteria must also be testable. This is important since
    otherwise it would not be possible to determine whether a page met
    or failed to meet the Success Criteria. The Success Criteria can be
    tested by a combination of machine and human evaluation as long as
    it is possible to determine whether a Success Criterion has been
    satisfied with a high level of confidence.

The Success Criteria were assigned to one of the three levels of
conformance by the working group after taking into consideration a wide
range of interacting issues. Some of the common factors evaluated when
setting the level included:

  *

    whether the Success Criterion is *essential* (in other words, if the
    Success Criterion isn't met, then even assistive technology can't
    make content accessible)

  *

    whether it is possible to satisfy the Success Criterion for *all Web
    sites and types of content* that the Success Criteria would apply to
    (e.g., different topics, types of content, types of Web technology)

  *

    whether the Success Criterion requires skills that could *reasonably
    be achieved by the content creators* (that is, the knowledge and
    skill to meet the Success Criteria could be acquired in a week's
    training or less)

  *

    whether the Success Criterion would impose limits on the "look &
    feel" and/or function of the Web page. (limits on function,
    presentation, freedom of expression, design or aesthetic that the
    Success Criteria might place on authors)

  *

    whether there are no workarounds if the Success Criterion is not met


      Understanding Accessibility Support

Many of the Success Criteria deal with providing accessibility through
assistive technologies or special accessibility features in mainstream
user agents (for example, a 'show captions' option in a media player).
That is, the Success Criteria require that something be done in the Web
content that would make it possible for assistive technologies to
successfully present the content's information to the user. For example,
a picture that you were supposed to click on to go to a topic would not
be accessible to a person who was blind unless text alternatives for the
picture were provided in a way that user agents including assistive
technologies can find and display them. The key here is that the text
alternative must be included in a way that user agents including
assistive technologies can understand and use – in a way that is
"Accessibility Supported."

Another example would be a custom control that is included on a Web
page. In this case, a standard user agent would not ordinarily be able
to present an alternative to the user. If, however, information about
the control including its name, role, value, how to set it etc. are
provided in a way that assistive technologies can understand and control
them, then users with assistive technologies will be able to use these
controls.

When new technologies are introduced, two things must happen in order
for people using assistive technologies to be able to access them.
First, the technologies must be designed in a way that user agents
including assistive technologies could access all the information they
need to present the content to the user. Secondly, the user agents and
assistive technologies may need to be redesigned or modified to be able
to actually work with these new technologies.

"*Accessibility Supported*" means that both of these have been done and
that the technology will work with user agents and assistive technologies.


        Level of Assistive Technology Support Needed for "Accessibility
        Support"

This topic raises the question of how many or which assistive
technologies must support a Web technology in order for that Web
technology to be considered "accessibility supported". The WCAG Working
group and the W3C do not specify which or how many assistive
technologies must support a Web technology in order for it to be
classified as accessibility supported. This is a complex topic and one
that varies both by environment and by language. There is a need for an
external and international dialogue on this topic. Some notes to help in
understanding and exploring this topic are:

 1.

    Accessibility support of Web technologies varies by environment

      *

        Web technologies may only need to be supported by those specific
        user agents and assistive technologies deployed at a company.
        (These may be older versions of user agents and assistive
        technologies or the very newest versions).

      *

        Content posted to the public Web may need to work with a broader
        range of user agents and assistive technologies, including older
        versions.

 2.

    Accessibility support of Web technologies varies by language (and
    dialect)

      *

        There are different levels of older assistive technologies
        support in different languages and even countries. Some
        environments or countries may provide free assistive technologies.

 3.

    New technologies won't be supported in older assistive technologies

      *

        Clearly, a new technology cannot be supported by all past
        assistive technologies, so requiring that a technology be
        supported by all assistive technologies is not possible.

 4.

    Support for a single older assistive technology is usually not
    sufficient

      *

        Support by just one assistive technology (for a given
        disability) would not usually be enough, especially if most
        users who need it in order to access content do not have and
        cannot afford that assistive technology. The exception here
        would be information distributed to company employees only where
        they all have one assistive technology (of that type).

 5.

    Currently assistive technology that is affordable by the general
    public is often very poor

      *

        Creating content that can't be used by the general public with
        disabilities should be avoided. In many cases, the cost of
        assistive technologies is too high for users who need it. Also,
        the capabilities of free or low cost AT is often so poor today
        that Web content cannot be realistically restricted to this
        lowest (or even middle) common denominator. This creates a very
        difficult dilemma that needs to be addressed.

The Working Group, therefore, limited itself to defining what
constituted support and defers the judgment of how much, how many, or
which AT must support a technology to the community and to entities
closer to each situation that set requirements for an organization,
purchase, community, etc.

The Working Group encourages more discussion of this topic in the
general forum of society since this lack of generally available yet
robust assistive technologies is a problem that affects users,
technology developers and authors negatively.


        Technical Definition of "Accessibility Support"

Basically, a Web content technology is "accessibility supported" when
users' assistive technologies will work with the Web technologies *AND*
when the accessibility features of mainstream technologies will work
with the technology. Specifically, to qualify as an
accessibility-supported technology, the following must be true for a
technology:

accessibility supported

    supported by users' assistive technologies
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#atdef> as well as
    the accessibility features in browsers and other user agents
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#useragentdef>

    To qualify as an accessibility-supported use of a Web content
    technology (or feature of a technology), both 1 and 2 must be
    satisfied for a Web content technology (or feature):

     1.

        *The way that the Web content technology
        <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#technologydef>
        is used must be supported by users' assistive technology (AT).*
        This means that the way that the technology is used has been
        tested for interoperability with users' assistive technology in
        the human language(s)
        <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#human-langdef>
        of the content,

        *AND*

     2.

        *The Web content technology must have accessibility-supported
        user agents that are available to users.* This means that at
        least one of the following four statements is true:

         1.

            The technology is supported natively in widely-distributed
            user agents that are also accessibility supported (such as
            HTML and CSS);

            *OR*

         2.

            The technology is supported in a widely-distributed plug-in
            that is also accessibility supported;

            *OR*

         3.

            The content is available in a closed environment, such as a
            university or corporate network, where the user agent
            required by the technology and used by the organization is
            also accessibility supported;

            *OR*

         4.

            The user agent(s) that support the technology are
            accessibility supported and are available for download or
            purchase in a way that:

              *

                does not cost a person with a disability any more than a
                person without a disability *and*

              *

                is as easy to find and obtain for a person with a
                disability as it is for a person without disabilities.

    /Note 1: /The WCAG Working group and the W3C do not specify which or
    how much support by assistive technologies there must be for a
    particular use of a Web technology in order for it to be classified
    as accessibility supported. (See Level of Assistive Technology
    Support Needed for "Accessibility Support"
    <https://www.w3.org/TR/2012/NOTE-UNDERSTANDING-WCAG20-20120103/conformance.html#uc-support-level-head>.)

    /Note 2: /Web technologies can be used in ways that are not
    accessibility supported as long as they are not relied upon
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#reliedupondef> and
    the page as a whole meets the conformance requirements, including
    /Conformance Requirement 4: Only Accessibility-Supported Ways of
    Using Technologies
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#cc4>/ and
    /Conformance Requirement 5: Non-Interference
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#cc5>/, are met.

    /Note 3: /When a Web Technology
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#technologydef> is
    used in a way that is "accessibility supported," it does not imply
    that the entire technology or all uses of the technology are
    supported. Most technologies, including HTML, lack support for at
    least one feature or use. Pages conform to WCAG only if the uses of
    the technology that are accessibility supported can be relied upon
    to meet WCAG requirements.

    /Note 4: /When citing Web content technologies that have multiple
    versions, the version(s) supported should be specified.

    /Note 5: /One way for authors to locate uses of a technology that
    are accessibility supported would be to consult compilations of uses
    that are documented to be accessibility supported. (See
    Understanding Accessibility-Supported Web Technology Uses
    <https://www.w3.org/TR/2012/NOTE-UNDERSTANDING-WCAG20-20120103/conformance.html#uc-documented-lists-head>.)
    Authors, companies, technology vendors, or others may document
    accessibility-supported ways of using Web content technologies.
    However, all ways of using technologies in the documentation would
    need to meet the definition of accessibility-supported Web content
    technologies above.


        Understanding Accessibility-Supported Web Technology Uses

Individual authors will not usually be able to do all of the testing
necessary to determine which ways of using which Web technologies are
actually supported by which versions of assistive technologies and user
agents. Authors may therefore rely on publicly documented compilations
that document which assistive technologies support which ways of using
which Web technologies. By public, we do not mean that the compilation
and its documentation are necessarily generated by a public agency, only
that they are available to the public. Anyone can create publicly
documented compilations of "Web Technology Uses and their Accessibility
Support." People may create compilations and give them names that
authors can refer to them by. As long as they are publicly documented,
authors or customers etc. can easily select uses that meet their needs.
Customers or others can pick technologies that fit their environment or
language at any point in time and specify those to be used in creating
their content. Authors are strongly encouraged to use sources that have
an established reputation for accuracy and usefulness. Technology
developers are strongly encouraged to provide information about the
accessibility support for their technologies. The Working Group
anticipates that only documents that provide accurate information and
benefit both authors and users will achieve market recognition in the
long term.

There is no requirement in WCAG that a publicly documented compilation
be used or that only technology uses from such a compilation be used.
The publicly documented compilations are described only as a method to
make an otherwise critical, but somewhat complicated, aspect of
conformance easier for authors who are not themselves experts on
assistive technology support (or who just don't have the time to keep up
with advances in mainstream and assistive technology support for each
other).

Authors, companies or others may wish to create and use their own
compilations of accessibility-supported technology uses and this is
allowed in meeting WCAG. Customers, companies or others may, however,
specify that technology uses from a custom or public compilation be
used. See Appendix B Documenting Accessibility Support for Uses of a Web
Technology <#accessibility-support-documenting>.


        Accessibility Support Statements

Examples of ways in which a conformance claim might document its
accessibility support include:

 1.

    This conformance claim meets the accessibility support requirement
    based on testing content in language(s) of the content with User
    Agents A, B, and C, and Assistive Technologies X, Y, and Z. This
    means that we were able to pass all of the success criteria for
    level A of WCAG 2.0 using these products.

 2.

    This conformance claim meets the accessibility support requirement
    for the language(s) of the content based on the use of techniques
    and user agent notes documented in Techniques for WCAG 2.0. It is
    also based on the accessibility support documentation for the
    technologies (that we relied upon for conformance), which is
    available in " XYZ Organization's Documentation of Accessibility
    Support."

 3.

    This conformance claim meets the accessibility support requirement
    for the language(s) of the content based on the use of technology Z
    as documented in "Technology Z accessibility supported techniques
    for WCAG 2.0."

 4.

    This conformance claim meets the accessibility support requirement
    for the language of the content based on the use of Accessibility
    Guidelines for Technology A and Accessibility Guidelines for
    Technology B. User agent and assistive technology support
    information can be found in "Product XYZ Accessibility Support
    Requirements", which are documented in these guidelines.


      Understanding "Programmatically Determined"

Several Success Criteria require that content (or certain aspects of
content) can be "programmatically determined." This means that the
content is authored in such a way that user agents, including assistive
technologies, can access the information.

In order for content created with Web technologies (such as HTML, CSS,
PDF, GIF, MPEG, Flash etc.) to be accessible to people with different
types of disabilities, it is essential that the technologies used work
with the accessibility features of browsers and other user agents,
including assistive technologies. In order for something to meet a
Success Criterion that requires it to be "programmatically determined,"
it would need to be implemented using a technology that has assistive
technology support.

Content that can be "programmatically determined" can be transformed (by
user agents including AT) into different sensory formats (e.g., visual,
auditory) or styles of presentation need by individual users. If
existing assistive technologies cannot do this, then the information
cannot be said to be programmatically determined.

The term was created in order to allow the working group to clearly
identify those places where information had to be accessible to
assistive technologies (and other user agents acting as accessibility
aids) without specifying exactly how this needed to be done. This is
important because of the continually changing nature of the
technologies. The term allows the guidelines to identify what needs to
be "programmatically determined" in order to meet the guidelines, and
then have separate documents (the How to Meet, Understanding, and
Technique documents), which can be updated over time, list the specific
techniques that will work and be sufficient at any point in time based
on user agent and assistive technology support.


        "Accessibility Supported" vs. "Programmatically Determined"

"Accessibility supported" relates to support by user agents (including
assistive technologies) of particular ways of using Web technologies.
Uses of Web technologies that are accessibility supported will work with
assistive technologies and access features in mainstream user agents
(browsers and players etc.).

"Programmatically determined" relates to the information in Web Content.
If technologies that are accessibility supported are used properly, then
assistive technologies and user agents can access the information in the
content (i.e., programmatically determine the information in the
content) and present it to the user.

The two concepts work together to ensure that information can be
presented to the user by user agents including assistive technologies.
Authors must rely only on uses of technologies that are
accessibility-supported — and must use them properly in order for the
information to be programmatically determinable — and hence presentable,
by assistive technologies and user agents to users with disabilities.


      Understanding Conforming Alternate Versions

Conformance requirement #1 allows non-conforming pages to be included
within the scope of conformance as long as they have a "conforming
alternate version". The conforming alternative version is defined as:

conforming alternate version

    version that

     1.

        conforms at the designated level, and

     2.

        provides all of the same information and functionality
        <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#functiondef> in
        the same human language
        <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#human-langdef>, and

     3.

        is as up to date as the non-conforming content, and

     4.

        for which at least one of the following is true:

         1.

            the conforming version can be reached from the
            non-conforming page via an accessibility-supported
            <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#accessibility-supporteddef>
            mechanism
            <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#mechanismdef>,
            or

         2.

            the non-conforming version can only be reached from the
            conforming version, or

         3.

            the non-conforming version can only be reached from a
            conforming page that also provides a mechanism to reach the
            conforming version

    /Note 1: /In this definition, "can only be reached" means that there
    is some mechanism, such as a conditional redirect, that prevents a
    user from "reaching" (loading) the non-conforming page unless the
    user had just come from the conforming version.

    /Note 2: /The alternate version does not need to be matched page for
    page with the original (e.g., the conforming alternate version may
    consist of multiple pages).

    /Note 3: /If multiple language versions are available, then
    conforming alternate versions are required for each language offered.

    /Note 4: /Alternate versions may be provided to accommodate
    different technology environments or user groups. Each version
    should be as conformant as possible. One version would need to be
    fully conformant in order to meet conformance requirement 1
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#cc1>.

    /Note 5: /The conforming alternative version does not need to reside
    within the scope of conformance, or even on the same Web site, as
    long as it is as freely available as the non-conforming version.

    /Note 6: /Alternate versions should not be confused with
    supplementary content
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#suppcontentdef>,
    which support the original page and enhance comprehension.

    /Note 7: /Setting user preferences within the content to produce a
    conforming version is an acceptable mechanism for reaching another
    version as long as the method used to set the preferences is
    accessibility supported.

This ensures that all of the information and all of the functionality
that is on the pages inside of the scope of conformance is available on
conforming Web pages.


        Why permit alternate versions?

Why does WCAG permit conforming alternate versions of Web pages to be
included in conformance claims? That is, why include pages that do not
satisfy the Success Criteria for a conformance level in the scope of
conformance or a claim?

  *

    Sometimes, pages use technologies that are not yet accessibility
    supported. When a new technology emerges, assistive technology
    support may lag behind, or may only be available to some target
    audiences. So authors may not be able to rely on the new technology
    for all users. However, there may be other benefits to using the new
    technology, e.g., better performance, a wider range of modalities
    available, etc. The alternate version requirement allows authors to
    include such Web pages in their Web site by providing an accessible
    alternative page in technologies that are accessibility supported.
    Users for whom the new technology is adequately supported get the
    benefits of the new version. Authors who look ahead to future
    accessibility support can satisfy the Success Criteria now with the
    alternate version page, and also work with the other page to build
    in future access when assistive technology (AT) support is available.

  *

    For a variety of reasons, it may not be possible to modify some
    content on a Web page. For instance,

      o

        It may be critical to include an exact visual copy of a document
        for legal or historical reasons

      o

        The Web page may be included in a site but the site owner may
        not have the legal rights to modify the content on the original page

      o

        The company may not legally be able to remove, or alter in any
        way, something that was previously posted.

      o

        An author may not have permission to alter a document from
        another department, agency, or company

  *

    Sometimes, the best experience for users with certain types of
    disabilities is provided by tailoring a Web page specifically to
    accommodate that disability. In such a situation, it may not be
    possible or practical to make the Web page accommodate all
    disabilities by satisfying all of the Success Criteria. The
    alternate versions requirement permits such specialized pages to be
    included within a conformance claim as long as there is a fully
    conformant 'alternate version' page.

  *

    Many sites which are committed to accessibility have large
    quantities of legacy documents. While the information has been made
    available in accessible formats, there would be significant
    institutional resistance and procedural obstacles to removing these
    files en mass. Some organizations, especially governmental bodies,
    give precedence to traditional print-oriented processes. Even as
    these organizations have adapted to Internet publishing and embraced
    the need for accessible formats, they still retain a paper mindset
    and often insist on formats designed for hard copy as the "primary"
    version (even for documents that are only ever "published"
    electronically). Although the Working Group feels these approaches
    should be deprecated it does not feel they can be forbidden so long
    as accessible versions are readily available.

A concern when permitting Web pages that do not satisfy the Success
Criteria is that people with disabilities will encounter these
non-conforming pages, not be able to access their content, and not be
able to find the “conforming alternate version." A key part of the
Alternate Versions provision, therefore, is the ability to find the
conforming page (the alternate version) from the non-conforming page
when it is encountered. The conformance requirement that permits
alternate pages, therefore, also requires a way for users to find the
accessible version among the alternate versions.

Note that providing an alternate version is a fallback option for
conformance to WCAG and the preferred method of conformance is to make
all content directly accessible.


        Techniques for Providing a Conforming Alternate Version

The most important part of providing a conforming alternate version is
providing a mechanism to find it from the non-conforming version. A
number of different methods for doing this have been identified since
particular techniques may not always be possible for specific
technologies or situations. For example, if the author has control of
the server there are some powerful techniques that will allow users to
always have the choice up front. In many cases however the author may
not have control of the services on their Web server. In these cases
other techniques are provided. A link on the non-conforming page is
another powerful technique but not all non-conforming technologies
support hypertext links.

Below are the techniques that have been identified to date. We expect
that additional techniques will also be developed over time and they
will be added here as they arise and the support for these approaches by
user agents including assistive technologies can be demonstrated. For
example a developer of a new technology that some assistive technologies
cannot access might build in a feature that would allow those
technologies to automatically present a link to users that could take
them to an alternate version.


          Sufficient Techniques for Providing Conforming Alternative
          Versions of Web pages

Each numbered item below represents a technique or combination of
techniques that the WCAG Working Group deems sufficient for providing
conforming alternate versions.

 1.

    G136: Providing a link at the beginning of a nonconforming Web page
    that points to a conforming alternate version
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G136>

 2.

    G190: Providing a link adjacent to or associated with a
    non-conforming object that links to a conforming alternate version
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G190>

 3.

    C29: Using a style switcher to provide a conforming alternate
    version <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/C29>
    (CSS)

 4.

    SVR2: Using .htaccess to ensure that the only way to access
    non-conforming content is from conforming content
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/SVR2> (SERVER)

 5.

    SVR3: Using HTTP referer to ensure that the only way to access
    non-conforming content is from conforming content
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/SVR3> (SERVER)

 6.

    SVR4: Allowing users to provide preferences for the display of
    conforming alternate versions
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/SVR4> (SERVER)


          Common Failures Identified by the Working Group

  *

    F19: Failure of Conformance Requirement 1 due to not providing a
    method for the user to find the alternative conforming version of a
    non-conforming Web page
    <http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F19>


          Additional Techniques (Advisory) for providing conforming
          alternative versions of Web pages

  *

    Providing reciprocal links between conforming and non-conforming
    versions (future link)

  *

    Excluding non-conforming content from search results (future link)

  *

    Using content negotiation (future link)

  *

    Not displaying content that relies on technologies that are not
    accessibility-supported when the technology is turned off or not
    supported. (future link)

  *

    Using metadata to allow location of a conforming alternative version
    from the URI of a non-conforming page (future link)


          Examples of Conforming Alternate Versions

  *

    *An intranet site with multiple versions. *

    A large company was concerned that the use of emerging Web
    technologies on an intranet site might limit their ability to
    address the needs of diverse office locations that have different
    technology bases and individual employees who use a wide variety of
    user agents and assistive technologies. To address these concerns,
    the company created an alternate version of the content that met all
    Level A Success Criteria using a more limited set of uses of
    accessibility-supported content technologies. The two versions link
    to each other.

  *

    *An informational site ensuring backward compatibility.*

    An information site covers a wide variety of subjects and wants to
    enable visitors to quickly find the topics they are looking for. To
    do this, the site has implemented an interactive menu system that is
    only supported in the most recent version of two popular user
    agents. To ensure that visitors who do not use these specific user
    agents are still able to effectively use the site, a navigation
    mechanism that does not depend on the interactive menu system is
    presented to user agents that do not support the newer technology.


      Understanding "Web Page"

The definition of a Web Page is:

Web page

    a non-embedded resource obtained from a single URI using HTTP plus
    any other resources that are used in the rendering or intended to be
    rendered together with it by a user agent
    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#useragentdef>

    /Note 1: /Although any "other resources" would be rendered together
    with the primary resource, they would not necessarily be rendered
    simultaneously with each other.

    /Note 2: /For the purposes of conformance with these guidelines, a
    resource must be "non-embedded" within the scope of conformance to
    be considered a Web page.

    /Example 1: /A Web resource including all embedded images and media.

    /Example 2: /A Web mail program built using Asynchronous JavaScript
    and XML (AJAX). The program lives entirely at
    http://example.com/mail, but includes an inbox, a contacts area and
    a calendar. Links or buttons are provided that cause the inbox,
    contacts, or calendar to display, but do not change the URI of the
    page as a whole.

    /Example 3: /A customizable portal site, where users can choose
    content to display from a set of different content modules.

    /Example 4: /When you enter "http://shopping.example.com/" in your
    browser, you enter a movie-like interactive shopping environment
    where you visually move around in a store dragging products off of
    the shelves around you and into a visual shopping cart in front of
    you. Clicking on a product causes it to be demonstrated with a
    specification sheet floating alongside. This might be a single-page
    Web site or just one page within a Web site.

It is important to note that, in this standard, the term "Web page"
includes much more than static HTML pages. The term 'Web Page' was used
in these guidelines to allow the guidelines to be more understandable.
But the term has grown in meaning with advancing technologies to
encompass a wide range of technologies, many of which are not at all
'page-like'. It also includes the increasingly dynamic Web pages that
are emerging on the Web, including "pages" that can present entire
virtual interactive communities. For example, the term "Web page" would
include an immersive interactive movie-like experience that you find at
a single URI.


      Understanding "Text Alternatives"

A text alternative is text that is used in place of non-text content for
those who cannot view the non-text content. Non-text content includes
such things as pictures, charts, applets, audio files, etc. People who
cannot see for example would not be able to see information presented in
a picture or chart. A text alternative is therefore provided that allows
the user to be able to convert the information (the text) into speech.
In the future, having the information in text also makes it possible to
translate the information into sign language, into pictures, or into a
simpler form of writing.

In order for people with disabilities to be able to use this text - the
text must be "programmatically determinable." This means that the text
must be able to be read and used by the assistive technologies (and the
accessibility features in browsers) that people with disabilities use.

It must also be possible for people using assistive technologies to find
these text alternatives when they encounter non-text content that they
cannot use. To accomplish this, we say that the text must be
"programmatically associated" with the non-text content. This means that
the user must be able to use their assistive technology to find the
alternative text (that they can use) when they land on the non-text
content (that they can't use).

